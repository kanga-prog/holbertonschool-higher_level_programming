"""
Tests for the BaseGeometry class.

This file tests the BaseGeometry class located in 7-base_geometry.py.
The tests verify that the class methods raise the expected exceptions and
behave as described in the documentation.

The following methods are tested:
- integer_validator: Tests for correct validation of integer values.
- area: Verifies that an exception is raised when calling the area method,
  since it is not implemented in the base class.

To run the tests:
$ python3 -m doctest ./tests/*
"""

# Importing the BaseGeometry class from the module
BaseGeometry = __import__('7-base_geometry').BaseGeometry

def test_integer_validator():
    """
    Tests the integer_validator method of the BaseGeometry class.

    This test ensures that the method raises the correct exceptions when:
    - The value is not an integer.
    - The value is less than or equal to zero.
    """
    bg = BaseGeometry()

    # Test for valid integer values
    bg.integer_validator("width", 89)
    bg.integer_validator("height", 12)
"garde" 62L, 1786B    

    try:
        bg.integer_validator("name", "John")
    except Exception as e:
        print("[{}] {}".format(e.__class__.__name__, e))

    try:
        bg.integer_validator("age", 0)
    except Exception as e:
        print("[{}] {}".format(e.__class__.__name__, e))

    try:
        bg.integer_validator("distance", -4)
    except Exception as e:
        print("[{}] {}".format(e.__class__.__name__, e))

def test_area():
    """
    Tests the area method of the BaseGeometry class.

    Since the area method is not implemented in the BaseGeometry class,
    an exception should be raised when it is called.
    """
    bg = BaseGeometry()

    try:
        bg.area()
    except Exception as e:
        print("[{}] {}".format(e.__class__.__name__, e))

 